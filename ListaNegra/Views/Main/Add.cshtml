@model ListaNegra.Models.ListItemModel

@{
    ViewBag.Title = "Agregar un nuevo reporte";
}

<style>
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }

    .font-size-unset {
        font-size: unset !important;
    }

    .item-container {
        height: 500px;
    }
</style>

<div>
    <h2>@ViewBag.Title</h2>

    <div class="jumbotron">
        <p>
            Aqui vas a generar tu reporte con las siguientes caracteristicas y reglas : <br />
            *<br />
            *<br />
            *<br />
            *<br />
        </p>
    </div>

    @using (Html.BeginForm("AddNewReport", "Main", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-12 p-3">
                <div class="form-group">
                    @Html.LabelFor(x => x.Title, "Titulo")
                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-12 p-3">
                <div class="form-group">
                    @Html.LabelFor(x => x.ListName, "Nombre del defraudador")
                    @Html.TextBoxFor(x => x.ListName, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-12 p-3">
                <div class="form-group">
                    @Html.LabelFor(x => x.Description, "Pon una description de la estafa")
                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-12 p-5">
                <div class="input-group">
                    @Html.LabelFor(x => x.Title, "")
                    <div id="map"></div>
                </div>
            </div>
        </div>
    }
</div>



<script>
    var map = null;
    var source = null;
    var layer = null;
    var marker = null;
    var OL_Proj = ol.proj;
    var OL_Coordinate = ol.coordinate;

    function initMap() {
        map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([-103.349609, 20.659698]),
                zoom: 10
            })
        });

        source = new ol.source.Vector({});
        layer = new ol.layer.Vector({
            source: source,
            style: new ol.style.Style({
                image: new ol.style.Icon({
                    src: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Map_marker_font_awesome.svg/200px-Map_marker_font_awesome.svg.png',
                    anchor: [0.5, 1],
                    scale: .25
                }),
            })
        });
        map.addLayer(layer);
    }

    $(() => {
        initMap();

        map.on("click", function (e) {

            //map.getView().setCenter(e.coordinate);

            var newProj = OL_Proj.toLonLat(e.coordinate);

            console.log(newProj);

            marker && source.removeFeature(marker);

            marker = new ol.Feature({
                geometry: new ol.geom.Point(e.coordinate) // dont worry about coordinate type 0,0 will be in west coast of africa
            });

            source.addFeature(marker);

        }); // click event map
    });//ready
</script>


@*important*@

    @*var currentPoint = new Point(routeCoords[index]);
    var feature = new Feature(currentPoint);
    vectorContext.drawFeature(feature, styles.geoMarker);*@